[{"D:\\REACT\\ss-solution-jana-task\\src\\index.js":"1","D:\\REACT\\ss-solution-jana-task\\src\\App.js":"2","D:\\REACT\\ss-solution-jana-task\\src\\reportWebVitals.js":"3","D:\\REACT\\ss-solution-jana-task\\src\\Components\\WeatherDetails.js":"4"},{"size":535,"mtime":1679429148796,"results":"5","hashOfConfig":"6"},{"size":4182,"mtime":1679773030120,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1679429149022,"results":"8","hashOfConfig":"6"},{"size":199,"mtime":1679767159291,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"13ic69j",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"D:\\REACT\\ss-solution-jana-task\\src\\index.js",[],[],[],"D:\\REACT\\ss-solution-jana-task\\src\\App.js",["24","25","26","27"],[],"import './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport Select from 'react-select'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n//import Weather from './Components/Weather';\n\n\nconst options = [\n  { value: 'India', label: 'India' },\n  { value: 'UK', label: 'UK' },\n]\n\nconst options2 = [\n  { country:'', value: '', label: 'Select State' },\n  { country:'India', value: 'Chennai', label: 'Chennai' },\n  { country:'India', value: 'Bangalore', label: 'Bangalore' },\n  { country:'UK', value: 'London', label: 'London' }\n]\n\n\nexport default function App() {\n  \n  return (\n    <div className=\"App\">\n      \n        <Weather />\n      \n    </div>\n  );\n}\n\nconst WeatherDetails = (props) =>{\n  const {data} = props;\n  return(\n    <div>\n    {data.name}, {data.sys.country}. Weather <br />\n    {data.main.temp}  {data.weather[0].description}\n  </div> \n  )\n}\n\nfunction Weather(weatherData) {\n  const [data, setData] = useState([]);\n  const [country, setcountry] = useState();\n  const [state, setstatee] = useState();\n  const [stateOption,setstateOption] = useState([])\n\n\n  const OnSelectionChange2 = (selectedOption)=> {\n    setstatee(selectedOption.value)\n    console.log(selectedOption)\n  }\n  const OnSelectionChange = (selectedOption)=> {\n    setcountry(selectedOption.value)\n    let states = []\n    options2.map((statee)=>{\n      if(statee.country===selectedOption.value){\n        states.push({value:statee.value,label:statee.label})\n      }\n    })\n    setstateOption(states)\n    //setstateOption([{value:'Jana',label:'Vj Jana'}])\n    console.log(country)\n  }\n\n  const getWeatherDetails = async ()=>{\n    await fetch(`${process.env.REACT_APP_API_URL}/weather/?q=${state},${country}&units=metric&APPID=dfbbc9612ad3e9bbc36199bcfacbefe4`)\n    .then(res => res.json())\n    .then(result => {\n      setData(result)\n      console.log(result);\n    });\n    <WeatherDetails data={data} />\n\n  }\n\n    return(\n      <div className='bodyy'>\n      <h1>Weather App</h1>\n      <div>\n        <div className='row'>\n          <div className='col'>\n          <Select options={options} onChange={OnSelectionChange} />\n          </div>\n          <div className='col'>\n          <Select options={stateOption} onChange={OnSelectionChange2} />\n          </div>\n          <div className='col'>\n          <button onClick={getWeatherDetails} >Submit</button>\n          </div>\n        </div>\n      {data.cod!=undefined ? <div>\n        <div className='weatherbox'> \n        <div className='text-left'> \n    {data.name}, {data.sys.country}. Weather <br /> </div>\n    <div className='text-left-temp'>{data.main.temp} &#8451; </div>\n    <img src='https://www.noaa.gov/sites/default/files/styles/square_width_650/public/2021-02/FocusArea__Weather-02.jpg?h=5dc006f5&itok=20VGa8_F' />\n     <br />\n    <div className='text-left'> \n    {data.weather[0].description}\n    </div>\n    </div>\n    <br /><br />\n    <div className='row'>\n      <div className='col'>\n        High/Low <span> {data.main.temp_max}/{data.main.temp_min}</span>\n        <br />\n        <span>---------------------------</span>\n        <br />\n        Humidity  <span> {data.main.humidity}%</span>\n        <br />\n        <span>---------------------------</span>\n        <br />\n        Pressure  <span> {data.main.pressure}hpa</span>\n        <br />\n        <span>---------------------------</span>\n        <br />\n        Visibility <span>  {data.visibility/1000} km</span>\n        <br />\n        <span>---------------------------</span>\n      </div>\n      <div className='col'>\n        Wind <span> {data.wind.speed} km/hr <br /></span>\n        <span>---------------------------</span>\n        <br />\n        Wind Direction  <span> {data.main.humidity}%</span>\n        <br />\n        <span>---------------------------</span>\n        <br />\n        Sunrise <span>  {new Date(data.sys.sunrise).toString().slice(16,24)}</span>\n        <br />\n        <span>---------------------------</span>\n        <br />\n        Sunset  <span> {new Date(data.sys.sunset).toString().slice(16,24)}</span>\n        <br />\n        <span>---------------------------</span>\n      </div>\n    </div>  \n    \n  </div> : <div />}\n  </div>\n    </div>\n    )\n  \n}","D:\\REACT\\ss-solution-jana-task\\src\\reportWebVitals.js",[],[],"D:\\REACT\\ss-solution-jana-task\\src\\Components\\WeatherDetails.js",[],[],{"ruleId":"28","severity":1,"message":"29","line":2,"column":17,"nodeType":"30","messageId":"31","endLine":2,"endColumn":26},{"ruleId":"32","severity":1,"message":"33","line":56,"column":26,"nodeType":"34","messageId":"35","endLine":56,"endColumn":28},{"ruleId":"36","severity":1,"message":"37","line":92,"column":16,"nodeType":"38","messageId":"39","endLine":92,"endColumn":18},{"ruleId":"40","severity":1,"message":"41","line":97,"column":5,"nodeType":"42","endLine":97,"endColumn":149},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]